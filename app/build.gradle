apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
File signPropertiesFile = rootProject.file(STORE_FILE)
def config = rootProject.ext.android
android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId "com.shanlin.autostore"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "8661a1ed35ee120124a68743", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]

    }

    if (signPropertiesFile.exists()) {
        signingConfigs {
            sign {
                storeFile signPropertiesFile
                storePassword STORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
                // 禁用V2版签名模式 ，使用旧版签名模式
                v2SigningEnabled false
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            if (signPropertiesFile.exists()) {
                signingConfig signingConfigs.sign
            }
        }
        release {
            //是否zip对齐
            //zipAlignEnabled true
            //缩减resource文件
            //shrinkResources true
            //混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            if (signPropertiesFile.exists()) {
                signingConfig signingConfigs.sign
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        abortOnError false
        ignoreWarnings true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:design:25.3.1'

    // dagger2
    compile 'com.google.dagger:dagger:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    // butterknife
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // retrofit
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    // rx
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.2'
    // log
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    // gson
    compile 'com.google.code.gson:gson:2.8.1'
    // zxing
    compile 'com.google.zxing:core:3.3.0'
    // glide
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    compile 'jp.wasabeef:glide-transformations:2.0.2'

    // wechat
    compile project(':library:wechatlib')
    // jpush
    compile 'cn.jiguang.sdk:jpush:3.0.3'
    compile 'cn.jiguang.sdk:jcore:1.1.1'

    // autolayout
    compile 'com.zhy:autolayout:1.4.5'
    // authcode（自动获取短信验证码）
    compile 'tech.michaelx.authcode:authcode:1.0.0'
    // multipleimageselect（图片选择）
    compile 'com.darsh.multipleimageselect:multipleimageselect:1.0.4'
    // image-cropper（图片裁剪）
    compile 'com.theartofdev.edmodo:android-image-cropper:2.4.+'
}
