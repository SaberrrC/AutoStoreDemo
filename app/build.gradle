apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
File signPropertiesFile = rootProject.file(STORE_FILE)
def config = rootProject.ext.android
android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        applicationId "com.shanlin.autostore"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "8661a1ed35ee120124a68743", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]

    }

    if (signPropertiesFile.exists()) {
        signingConfigs {
            sign {
                storeFile signPropertiesFile
                storePassword STORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
                // 禁用V2版签名模式 ，使用旧版签名模式
                v2SigningEnabled false
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            if (signPropertiesFile.exists()) {
                signingConfig signingConfigs.sign
            }
        }
        release {
            //是否zip对齐
            //zipAlignEnabled true
            //缩减resource文件
            //shrinkResources true
            //混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            if (signPropertiesFile.exists()) {
                signingConfig signingConfigs.sign
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        abortOnError false
        ignoreWarnings true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    buildToolsVersion '27.0.3'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile project(':autostoresdk')
    compile project(':library:wechatlib')
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //jpush
    compile 'cn.jiguang.sdk:jpush:3.0.3'
    // 此处以JPush 3.0.3 版本为例。
    compile 'cn.jiguang.sdk:jcore:1.1.1'
}
